톰캣처럼 서블릿을 지원하는 WAS를 서블릿 컨테이너라고 함



서블릿 컨테이너는 서블릿 객체를 생성, 초기화, 호출, 종료하는 "생명주기" 관리한다



서블릿 객체는 '싱글톤'으로 관리

  고객의 요청이 올 때 마다 계속 객체를 생성하는 것은 비효율적이다.
  
  최초 로딩 시점에 서블릿 객체를 미리 만들어두고 재활용
  
  모든 고객 요청은 동일한 서블릿 객체 인스턴스에 접근
  
  "공유 변수 사용 주의"
  
  서브릿 컨테이너 종료시 함께 종료


우리가 서버에 서블릿을 만들었다고 해서 스스로 작동하는 것읻 아니고, 서블릿을 관리해주는 것이 필요하다.

그러한 역할을 하는 것이 서블릿 컨테이너이다.

서블릿 컨테이너 = 클라이언트의 요청(request)를 받아주고 응답(response)할 수 있게, 웹서버와 소켓으로 통신하며, 
                대표적인 예로는 톰캣(Tomcat)이 있다. 
                톰캣은 실제로 웹 서버와 통신하여 JSP(자바 서버 페이지)와 Servlet이 작동하는 환경을 제공한다.
                
                
                
                
서블릿 컨테이넌의 역할

1. 웹서버와의 통신 지원
  서블릿 컨테이너는 서블릿과 웹서버가 손쉽게 통신 할 수 있게 한다.
  
  일반적으로 우리는 소캣을 만들고, listen, accept 등을 해야하지만
  
  서블릿 컨테이너는 이러한 기능을 api로 제공하여 복잡한 과정을 생략할 수 있다.
  
  그래서 개발자가 서블릿에 구현해야할 비지니스 로직에 대해서만 초점을 두게끔 도와준다.
  
  
2. 서블릿 생명주기 관리
  서블릿 컨테이너는 서블릿의 탄생과 죽음을 관리한다.
  서블릿 클래스를 로딩하여 인스턴스화 하고, 초기화 메소드를 호출하고, 요청이 들어오면 적절한 서블릿 메소드를 호출한다.
  또한 서블릿이 생명을 다 한 순간에는 적절하게 Garbage Collection을 진행한다.
  
  










JSP도 서블릿으로 변환 되어서 사용


동시 요청을 위한 멀티 쓰레드 처리도 지원한다.












