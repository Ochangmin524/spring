어떤 경우에 컴포넌트 스캔과 자동 주입을 사용하고, 어떤 경우에 설정 정보를 통해서 수동으로 빈을
등록하고, 의존관계도 수동으로 등록해야할까?

자동을 사용하자!

결론부터 이야기하자면, 스프링이 나오고 시간이 지날 수록 점점 자동을 선호하는 추세다. 스프링은 
@Component 뿐만 아니라, @Controller, @Service, @Repository 처럼 
계층에 맞추어 일반적인 애플리케이션 로직을 자동으로 스캔할 수 있도록 지원한다.
거기에 더해서 최근 스프링 부트는 컴포넌트 스캔을 기본으로 사용하고,
스프링 부트의 다양한 스프링 빈들도 조건이 맞으면 자동으로 등록하도록 설계한다.

설정 정보를 기반으로 애플리케이션을 구성하는 부분과 실제 동작하는 부분을 명확하게 나누는 것이 이상적이다.
하지만 개발자 입장에서 스프링 빈을 하나 등록할 때 @Component만 넣어주면 끝나는 일을 
@Configuration 설정정보에 가서 @Bean 을 적고, 객체를 생성하고, 주입할 대상을 일일이 적어주는 것은 번거롭다.
또한 관리할 빈이 많아서 설정 정보가 커지면 설정 정보를 관리하는 것 자체가 부담이 된다.
그리고 결정적으로 자동 빈 등록을 사용해도, OCP, DIP를 지킬 수 있다.



그러면 수동 빈 등록은 언제 사용하면 좋을까?

애플리케이션은 크게 업무 로직과 기술 지원 로직으로 나눌 수 있다.
업무 로직 빈 : 웹을 지원하는 컨트롤러, 
             핵심 비즈니스 로직이 있는 서비스,
             데이터 계픙의 로직을 처리하는 리포지토리 등 모두가 업무 로직이다.
             보통 비즈니스 요구사항을 개발할때 추가되거나 변경된다.

